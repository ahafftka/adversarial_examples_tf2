"""
Train and save 10 fully connected MNIST classifiers which applied adversarial
training with data generated by the projected gradient descent attack.
The trained models will be saved under the experiments/models folder.

"""

from __future__ import absolute_import

from adversarial_examples_tf2.attackers.pgd_attacker import PGDAttacker
from adversarial_examples_tf2.defenders.adversarial_training_defender import AdversarialTrainingDefender
from adversarial_examples_tf2.experiments.classifier_utils.mnist_adv_training import get_trained_model
from adversarial_examples_tf2.experiments.data_utils.mnist import load_mnist


def main():
    # Load MNIST data as tf.data.Dataset.
    batch_size = 32
    train_data, test_data = load_mnist(batch_size)

    model_num = 10
    paths = ["../models/mnist/adv_training_with_pgd_fully_connected/model-{}-{}"
             .format(i + 1, model_num) for i in range(model_num)]

    epochs = 5
    for path in paths:
        # Compile and train a simple fully connected MNIST classifier that has
        # been trained on adversarial examples generated by the projected
        # gradient descent attacker.
        classifier = get_trained_model(train_data, epochs=epochs)
        print("Saving adversarially trained model to path {}.".format(path))
        classifier.save_to_file(path)

if __name__ == "__main__":
    main()
